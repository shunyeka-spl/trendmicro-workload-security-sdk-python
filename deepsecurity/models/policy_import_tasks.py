# coding: utf-8

"""
    Trend Micro Workload Security API

    Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # noqa: E501

    OpenAPI spec version: 50.0.810
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from deepsecurity.models.policy_import_task import PolicyImportTask  # noqa: F401,E501


class PolicyImportTasks(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'policy_import_task': 'list[PolicyImportTask]'
    }

    attribute_map = {
        'policy_import_task': 'policyImportTask'
    }

    def __init__(self, policy_import_task=None):  # noqa: E501
        """PolicyImportTasks - a model defined in Swagger"""  # noqa: E501

        self._policy_import_task = None
        self.discriminator = None

        if policy_import_task is not None:
            self.policy_import_task = policy_import_task

    @property
    def policy_import_task(self):
        """Gets the policy_import_task of this PolicyImportTasks.  # noqa: E501


        :return: The policy_import_task of this PolicyImportTasks.  # noqa: E501
        :rtype: list[PolicyImportTask]
        """
        return self._policy_import_task

    @policy_import_task.setter
    def policy_import_task(self, policy_import_task):
        """Sets the policy_import_task of this PolicyImportTasks.


        :param policy_import_task: The policy_import_task of this PolicyImportTasks.  # noqa: E501
        :type: list[PolicyImportTask]
        """

        self._policy_import_task = policy_import_task

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PolicyImportTasks, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PolicyImportTasks):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

